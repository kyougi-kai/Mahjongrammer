//ディレクトリ移動
cd C:\Users\Student\Documents\Github\Mahjongrammer

//プロンプトからのクラウドデータベースへの接続
mysql -h trolley.proxy.rlwy.net -u root -p railway --port 59200 --protocol=TCP

//パスワード
yqHSkiatKYxPmlMdQJjdArjmYmdiWhDB

//データベース名
railway

//ローカルでの環境構築
create database mahjongrammer_db;
create user 'kyougi_kai'@'localhost' identified by 'Kyougikai831';
grant all privileges on mahjongrammer_db.* to 'kyougi_kai'@'localhost';
flush privileges;
use mahjongrammer_db;
create table users(
    user_id char(36) primary key,
    username varchar(255) not null,
    password varchar(255) not null,
    email varchar(255) null
);
create table rooms(
    room_id int auto_increment primary key,
    parent_id char(36) not null,
    ratio varchar(255) not null,
    foreign key (parent_id) references users(user_id) on delete cascade
);
create table room_member(
    room_id int,
    user_id char(36),
    created_at datetime not null default current_timestamp,
    primary key (room_id, user_id),
    foreign key (room_id) references rooms(room_id) on delete cascade,
    foreign key (user_id) references users(user_id) on delete cascade
);

//ローカルでのサーバー起動
node --env-file=.env-local src/app.js

//誰かが新しいライブラリを入れたら
npm install

//コード
poo.queryで出した値は必ず何もそうさせず変数に入れる
〇 const result = pool.query('なんか');
✕ const result = pool.query('なんか')[0];

//フォーマッタの設定
拡張機能 「prettier code formatter」をインストール
設定から
・format on save を適用
・default fromatter をprettierにする
・detect indentation を外す
・tab size を4にする

//配分
5,4,2,2,2,2,2,1

//後で直す
品詞が複数あるやつはランダムに切り替える

//コードを書く時の原則
単一責任原則

function startGame() {
  // プレイヤー初期化
  players = createPlayers();

  // カードをシャッフル
  shuffleDeck();

  // WebSocket接続
  connectToServer();

  // UIを更新
  renderStartScreen();
}

↓

function startGame() {
  initializeGameLogic();
  initializeConnection();
  initializeUI();
}

function initializeGameLogic() {
  players = createPlayers();
  shuffleDeck();
}

function initializeConnection() {
  connectToServer();
}

function initializeUI() {
  renderStartScreen();
}
