const errorTemplete = {
    part: "",
    index: 0,
    type: "",
    reason: "",
    suggestion: ""
};

 let GCR = {
        success:true,------successesのすべてにtrueが含まれているならtrue,そうでなければfalse
        successes:[],------S,Vなど　trueならばtrueを入れる
        currentType:[],
        currentTypeNum:0,
        currentIndex:0,
        flagsNum:0,
        temporaryWordsNum:0,
        message:"",
        errors:{},
        '100': {
            kansi: [],----冠詞のタグをいれる　
            zentiKeiyousi: [],
            meisi: [],
            koutiKeiyousi: [],---
            wordsCount: 0,----ここがtrueNumと等しいならばtrueを返す
            targetIndex: 0----現在読み込んでいる部分の添え字
        },
    };


const testGCR = {
    success: false,
    successes: { S: [], V: [] },
    currentType: ['S', 'V'],
    currentTypeNum: 0,
    currentIndex: 0,
    flagsNum: 100,
    temporaryWordsNum: 0,
    message: '',
    errors: {},
};
GCR.currentType[GCR.currentTypeNum]（今のタイプ「S,V,O、C」）
GCR.flags.targetIndex（今の添え字）

tango[targetSentence[GCR.flags.targetIndex]].tags

GCR.flags.wordsCount += true_M_Num;
        GCR.flags.targetIndex += 1;

        let keyName = GCR.currentType[GCR.currentTypeNum] + "ZentiKeiyousi"
            GCR.errors.push({[keyName]:errorTemplete});
            GCR.errors[keyName].part = GCR.currentType[GCR.currentTypeNum];
            GCR.errors[keyName].index = currentIndex;
            GCR.errors[keyName].type = "名詞修飾ミス！";
            GCR.errors[keyName].reason = "修飾のやり方が間違っています";
            GCR.errors[keyName].suggestion = "";


 GCR[GCR.flagsNum] = {kansi:[],zentiKeiyousi:[],meisi:[],koutiKeiyousi:[],wordsCount:0,targetIndex:0};

 kansi,meisi等にはtagsを入れ、単数/複数や三単現Sの判定を行う

 テストケース

 現状・・・名詞は冠詞がなくとも通る


checkMeisiGrammerMatters{
    単数/複数の判定
    三単現Sの判定を行う
    冠詞オンリーでもとおってしまう→冠詞オンリーでは通らないようにする
    冠詞があれば、名詞は単数/複数の判定を行う
    冠詞がなければ、名詞は単数/複数の判定を行う
}

checkVテストケース

["can","run"]...true
["can",[""],""]...

法助動詞＋

次回・・・ダウンロードしたスプレッドシートから動詞の登録、checkV,checkJodousiRoot→法助動詞、相助動詞、疑似法助動詞


checkJodousiRoot→法助動詞、相助動詞、疑似法助動詞
疑似法助動詞の例
・be going to
・be able to
・have to
↑助動詞が変化する
・used to
・had better
・ought to
↑助動詞が変化しない





errorManeger・・・エラーを一元的に管理する関数
function errorManager(GCR,errorID){
    switch (errorID) {
        case 'AllNotExist': //何も入っていない
        case 'ZentiKeiyousi': //前置修飾ミス
        case 'MeisiNotExist': //名詞が存在しない
        case 'KoutiKeiyousi': //後置修飾ミス
        case 'Daimeisi': //代名詞ミス
    }
}

呼び出すとき・・・ GCR = errorManager(GCR, typeText(str), errorID(str)); /*何も入っていない場合*/
        return GCR;



checkV→後ろからチェックする
これによって助動詞と動詞の区別をする
（例）I will have an apple. 
は前からチェックするとhaveを助動詞と認識する

数詞、数量詞の区別（形容詞）
不可算×数詞、数量詞はまだ考慮していない

be動詞を使うならMがいる→総合判断

[単語](https://www.notion.so/1b2aefa5fc6f80d48a57fc25b1ceeffd?pvs=21)
 let tango = {   
accept: {
        means: {
            動詞:受け入れる
        },
        tags: ['他動詞', '動作動詞', '原型'],
        katuyou: ['accept', 'accepts', 'accepted', 'accepted', 'accepting'],
    },
    act: {
        means: {
            動詞:（役を） 演じる
        },
        tags: ['自動詞', '動作動詞', '原型'],
        katuyou: ['act', 'acts', 'acted', 'acted', 'acting'],
    },
}

   accept: {
        tags: ['他動詞', '動作動詞', '原型'],
        katuyou: ['accept', 'accepts', 'accepted', 'accepted', 'accepting'],
        hinsi: ['動詞'],
        means: {
            動詞: '受け入れる',
        },
    },
    accepts: {
        tags: ['他動詞', '動作動詞', '三単現s'],
        katuyou: ['accept', 'accepts', 'accepted', 'accepted', 'accepting'],
        hinsi: ['動詞'],
        means: {
            動詞: '受け入れる',
        },
    },
    accepted: {
        tags: ['他動詞', '動作動詞', '過去形', '過去分詞'],
        katuyou: ['accept', 'accepts', 'accepted', 'accepted', 'accepting'],
        hinsi: ['動詞'],
        means: {
            動詞: '受け入れる',
        },
    },
    accepting: {
        tags: ['他動詞', '動作動詞', '現在分詞'],
        katuyou: ['accept', 'accepts', 'accepted', 'accepted', 'accepting'],
        hinsi: ['動詞'],
        means: {
            動詞: '受け入れる',
        },
    },
    become: {
        tags: ['自動詞', '連結動詞', 'SVOCがとれる動詞', '原型','過去分詞'],
        katuyou: ['become', 'becomes', 'became', 'become', 'becoming'],
        hinsi: ['動詞'],
        means: {
            動詞: '〔名詞・形容詞・過去分詞などをあとにつけて〕 ～になる、～に変わる  〔過去分詞形もbecome〕',
        },
    },
    becomes: {
        tags: ['自動詞', '連結動詞', 'SVOCがとれる動詞','三単現s'],
        katuyou: ['become', 'becomes', 'became', 'become', 'becoming'],
        hinsi: ['動詞'],
        means: {
            動詞: '〔名詞・形容詞・過去分詞などをあとにつけて〕 ～になる、～に変わる  〔過去分詞形もbecome〕',
        },
    },
    became: {
        tags: ['自動詞', '連結動詞', 'SVOCがとれる動詞','過去形'],
        katuyou: ['become', 'becomes', 'became', 'become', 'becoming'],
        hinsi: ['動詞'],
        means: {
            動詞: '〔名詞・形容詞・過去分詞などをあとにつけて〕 ～になる、～に変わる  〔過去分詞形もbecome〕',
        },
    },
    becoming: {
        tags: ['自動詞', '連結動詞', 'SVOCがとれる動詞', '現在分詞'],
        katuyou: ['become', 'becomes', 'became', 'become', 'becoming'],
        hinsi: ['動詞'],
        means: {
            動詞: '〔名詞・形容詞・過去分詞などをあとにつけて〕 ～になる、～に変わる  〔過去分詞形もbecome〕',
        },
    },